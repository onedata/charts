
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "fullname" . }}-ready-check
  labels:
    app: {{ template "fullname" . }}
    chart: {{ .Chart.Name }}
    release: {{ template "releaseName" . }}
    heritage: {{ .Release.Service }}
    component: "oneprovider-ready-check"
  annotations:
    version: "{{ .Chart.Version }}"
spec:
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        chart: {{ .Chart.Name }}
        release: {{ template "releaseName" .  }}
        heritage: {{ .Release.Service }}
        component: "oneprovider-ready-check"
      annotations:
        version: "{{ .Chart.Version }}"
    spec:
      restartPolicy: Never
      hostNetwork: {{ template "hostNetwork" . }}
{{ include "imagePullSecrets" . | indent 6 }}
      {{- if (index .Values "wait_for_oneprovider" "enabled") }}
      initContainers:
      {{- end }}
      {{- if (index .Values "wait_for_oneprovider" "enabled") }}
      - name: wait-for-{{ .Chart.Name }}
        image: {{ .Values.wait_for.image }}
        imagePullPolicy: {{ template "imagePullPolicy" dict "root" . "context" .Values.wait_for }}
        command:
          - "/bin/sh"
          - "-c"
          - >
            user="" ;
            while [ "$deployed" != "true" ] ; do deployed="$(curl -k  -sS  -X GET 'https://{{ template "oneprovider_name" . }}:9443/configuration' | jq .'deployed')" ; echo "Waiting for https://{{ template "oneprovider_name" . }}:9443/configuration to return something..." ; echo "returned=$deployed" ; sleep 2 ; done ;
      {{- end }}
      containers:
      - name: oneprovider-ready-check
        image: alpine:3.6
        imagePullPolicy: {{ template "imagePullPolicy" dict "root" . }}
        command:
          - "sh"
          - "-c"
          - >
            echo 'all ok, exiting' ;