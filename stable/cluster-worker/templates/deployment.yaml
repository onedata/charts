apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: {{ .Chart.Name }}
    release: {{ template "releaseName" . }}
    heritage: {{ .Release.Service }}
    component: "cluster-worker"
  annotations:
    version: "{{ .Chart.Version }}"
spec:
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
      chart: {{ .Chart.Name }}
      release: {{ template "releaseName" . }}
      heritage: {{ .Release.Service }}
      component: "cluster-worker"
  serviceName: {{ template "fullname" . }}
  replicas: {{ .Values.cluster_worker_nodes_count }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        chart: {{ .Chart.Name }}
        release: {{ template "releaseName" . }}
        heritage: {{ .Release.Service }}
        component: "cluster-worker"
        {{- if (index .Values "deployFromSources" "enabled") }}
        sources: "{{ .Values.deployFromSources.timestamp }}"
        {{- end }}
      annotations:
        version: "{{ .Chart.Version }}"
    spec:
      subdomain: {{ template "fullname" . }}
      hostNetwork: {{ template "hostNetwork" . }}
      terminationGracePeriodSeconds: 3
      {{- if or .Values.affinity .Values.onedata_anti_affinity_enabled }}
      affinity:
      {{- if .Values.onedata_anti_affinity_enabled }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: component
                operator: In
                values:
                - oneprovider
                - onezone
              - key: release
                operator: In
                values:
                - {{ template "releaseName" . }}
            topologyKey: kubernetes.io/hostname
      {{- end }}
      {{- if .Values.affinity }}
{{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
{{ include "imagePullSecrets" . | indent 6 }}
      initContainers:
        - name: wait-for-couchbase
          image: curlimages/curl:7.86.0
          command: ["/bin/sh"]
          args:
          - -c
          - >
            while [ $(curl -sw '%{http_code}' "http://{{ .Release.Name }}-couchbase-0.{{ .Release.Name }}-couchbase.default.svc.cluster.local:8091/pools/default/buckets" -o /dev/null) -ne 200 ]; do
              sleep 1;
            done
      containers:
      - name: cluster-worker
        image: {{ .Values.image }}
        # imagePullPolicy: {{ template "imagePullPolicy" dict "root" . }}
        imagePullPolicy: Always
        {{- if or .Values.cpu .Values.memory }}
        resources:
          requests:
          {{- if .Values.cpu }}
            cpu: {{ .Values.cpu }}
          {{- end }}
          {{- if .Values.memory }}
            memory: {{ .Values.memory }}
          {{- end }}
        {{- end }}
        ports:
          - containerPort: 80
          - containerPort: 443
          - containerPort: 6665
          - containerPort: 9443
        {{- range untilStep 9100 9139 1 }}
          - containerPort: {{ . }}
        {{- end }}
        command:
          - "./run.sh"
        stdin: true
        tty: true
        securityContext:
          privileged: true
        volumeMounts:
          - name: cluster-worker-config
            mountPath: /cluster_worker/rel/cluster_worker/data/app.config
            subPath: app.config
      volumes:
        - name: cluster-worker-config
          configMap:
            name: {{ template "fullname" . }}-config
            # items:
            #   - key: CLUSTER_WORKER_CONFIG
            #     path: keys