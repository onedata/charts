# Default values for onezone.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image: onedata/onezone:21.02.7
imagePullPolicy: IfNotPresent
serviceType: ClusterIP

onedata_cli:
  image: onedata/rest-cli:21.02.7
  imagePullPolicy: IfNotPresent

wait_for:
  image: groundnuty/k8s-wait-for:v2.0
  imagePullPolicy: IfNotPresent

# Specifies if ready check job should be created.
onezone_ready_check:
  enabled: true

# onezone name, if empty defaults to a chart name
name: ''

# Resources requested by onezone
cpu: 1.5
memory: 4Gi

# Log level of the processes in the container
log_level: "info"

# Prevent oneprovider container to exit when container entrypoint fails
onepanel_debug_mode: false

# Enable loading oneozne configuration from ONEZONE_CONFIG env variable
onepanel_batch_mode_enabled: true

# If enabled, a new web cert will be generated with CN matching the
#   ONEPANEL_GENERATED_CERT_DOMAIN and signed by OnedataTestWebServerCa
# NOTE: The generation will be performed upon every startup, any
#   existing certs will be backed up and placed in the same directory.
# WARNING: This functionality is devised for test purposes and must not
#   be used in production.
onepanel_generate_test_web_cert: true

# The generated test web cert will be issued for below domain.
onepanel_generated_cert_domain: ""

# If enabled, onepanel will trust any server that has a cert signed by
#   the OnedataTestWebServerCa.
# WARNING: This functionality is devised for test purposes and must not
#   be used in production.
onepanel_trust_test_ca: true

# If enabled, onezone allows oneproviders to register their subdomains
# under onezone domain.
subdomainDelegationSupported: false

# Indicates policy enforced during provider registration. Possible options are:
#  open - anyone can acquire a registration token and register a new Oneprovider
#  restricted - requires an administrative privilege 'oz_providers_invite'
#              to generate a Oneprovider registration token. The token
#              can be issued for someone else.
oneproviderRegistration: "open"

# When this value is true, GUI packages uploaded by services operating under
# Onezone or by harvester admins are checked against known
# SHA-256 check-sums using the compatibility registry. Setting this value
# to false disables the verification.
# WARNING: disabling GUI package verification poses a severe security
# threat, allowing Oneprovider owners to upload arbitrary GUI to Onezone
# (which is then hosted in Onezone's domain).
guiPackageVerification: true

# This policy can be used to disable GUI package verification for harvester
# plugins only. See "guiPackageVerification" for detailed description.
# This setting has no effect if "guiPackageVerification" is set to false.
harversterGuiPackageVerification: true

# When true, all GUIs hosted in this cluster will print
# debug logs to browser console.
guiDebugMode: false

# Extra environmental variables that will be injected
# into oneprovider container.
envs: []

# Number of nodes (pod replicas) for of this onezone
# their indexes will be assigned FROM 0 (ZERO!)
# up to, but not including the count value
onezone_nodes_count: 1

# you can use values form the rage <0,onezone_nodes_count)
# by default the node with the highest index (onezone_nodes_count-1)
# is configured as a mainNode
# If a service list is empty, all available nodes are assigned that service.
cluster_config:
  managers: [ ]
  workers: [ ]
  databases: [ ]

# Onezone entrypoint waits for external rsync to finish updating
# container files before it continues
deployFromSources:
  enabled: false

# Erlang configuration file, which values will override
# respected default values in the app.conf of Onepanel
# The idea is to override as little as possible and allow
# the app.conf evolve on it's own.
panelOverlayConfig: |-
  [].

# Same story as above, just for worker service.
workerOverlayConfig: |-
  [].

# A map of Erlang configuration files that override
# respected default values in the app.conf of Onepanel.
# Example:
# workerExtraOverlayConfigs:
#   grafana.conf: |-
#    [].
workerExtraOverlayConfigs: []

# Same story as above, just for worker service.
panelExtraOverlayConfigs: []

# The generalization of nodeSelector.
# Allows for more fine grained controls over which
# nodes are selected by a kubernetes scheduler
# https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity: {}

# List of taints which are tolerated by the pods
# when nodes are selected by a kubernetes scheduler
# https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# Specify a map of key-value pairs. For the pod
# to be eligible to run on a node, the node
# must have each of the indicated key-value pairs as labels
# https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
nodeSelector: {}

# Generate certificates to access this onezone having trusted https connection
# You need to add cluster root certificate to your system for this to work
generate-certificates:
  enabled: false
  image: onedata/certificate-init-container:ga17ad4f
  imagePullPolicy: IfNotPresent
  signerName: clusterissuers.cert-manager.io/onedata-ci-cluster-tls
  signerNamespace: cert-manager
  signerSecret: onedata-ci-cluster-tls

# Mount certificates from a secret created before deployment
# Secret should be named in a same way, as the automatically created secret
# from generate-certificates option
certificates-from-a-secret:
  enabled: false

# Create a PVC and persist /volumes/persistence
# Atm. PVC expects to find a matching PV, which is assumed is
# to be local persistent volume. Those should be created and managed using this:
# https://github.com/kubernetes-incubator/external-storage/tree/master/local-volume/helm
persistence:
  enabled: false
  size: 20Gi
  accessModes:
    - ReadWriteOnce
  cleanUpJob:
    enabled: true
    image: groundnuty/k8s-wait-for:v2.0
    imagePullPolicy: IfNotPresent

# If set true, onezone will not be deployed on the same node as other onezones
# or oneproviders that are part of this deployment
onedata_anti_affinity_enabled: false

# Those credentials will be used by all onepanel REST operations etc.
onepanel_emergency_account: &onepanel_emergency_account
  name: onepanel
  password: password

# Main onezone admin user
main_onezone_admin: &main_onezone_admin
  name: admin
  password: password

# List of onezone admin users
onezone_admin_users:
  - *main_onezone_admin
  - *onepanel_emergency_account

# List of onezone onepanel regular users with example bellow
onepanel_users: []
  # - name: user
  #   password: password
  #   idps:
  #     onepanel:
  #       enabled: true
  #       mode: config

saml-idp:
  enabled: false

keycloak: &keycloak
  idpName: rhea
  displayName: Onedata Keycloak
  tokenPrefix: onedata
  appId: onedata
  voGroupId: Onedata-Keycloak-1
  superGroup: onedataKeycloakAdmins
  enabled: false
  icon-enabled: false

keycloak-workaround: *keycloak

token-dispenser:
  enabled: false

elasticsearch:
  enabled: false

auth-conf:
  openIdConfig: ""
  extraIdps: ""

handle-proxy-mock:
  enabled: false

# Add additional volume mounts definition to onezone container
external-volume-mounts: {}

# Add additional volumes definition
external-volumes: {}

# Add additional persistent volumes claim templates definition
external-persistent-volume-claims-templates: {}

gracefulStop:
  enabled: true
  # default 86400 seconds, 24h
  terminationGracePeriodSeconds: 86400

pebble:
  enabled: false