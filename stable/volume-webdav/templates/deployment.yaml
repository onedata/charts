apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: {{ .Chart.Name }}
    release: {{ template "releaseName" . }}
    heritage: {{ .Release.Service }}
    component: {{ .Chart.Name }}
  annotations:
    version: "{{ .Chart.Version }}"
spec:
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
      chart: {{ .Chart.Name }}
      release: {{ template "releaseName" . }}
      heritage: {{ .Release.Service }}
      component: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        chart: {{ .Chart.Name }}
        release: {{ template "releaseName" . }}
        heritage: {{ .Release.Service }}
        component: {{ .Chart.Name }}
      annotations:
        version: "{{ .Chart.Version }}"
    spec:
      hostname: {{ .Chart.Name | quote }}
      subdomain: {{ template "fullname" . }}
      hostNetwork: {{ template "hostNetwork" . }}
      terminationGracePeriodSeconds: 3
      {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
{{ include "imagePullSecrets" . | indent 6 }}
      containers:
      - name: {{ .Chart.Name }}
        image: {{ .Values.image }}
        imagePullPolicy: {{ template "imagePullPolicy" dict "root" . }}
        env:
          - name: NGINX_AUTH_BASIC
            value: "{{ .Values.username }}:{PLAIN}{{ .Values.password }}"
        ports:
          - name: http
            containerPort: 80
            protocol: TCP
        livenessProbe:
          tcpSocket:
            port: 80
        readinessProbe:
          tcpSocket:
            port: 80
      {{- if and (index .Values "volume-data-sync" "enabled") }}
        volumeMounts:
        {{- range $volume := (index .Values "volume-data-sync" "volumes") }}
          - mountPath: /var/www/files/{{ $volume.name }}
            mountPropagation: Bidirectional
            name: {{ $volume.name }}
        {{- end }}
      {{- end }}
      {{- if and (index .Values "volume-data-sync" "enabled") }}
        {{- range $volume := (index .Values "volume-data-sync" "volumes") }}
      - name: {{ $volume.name }}
        image: {{ $volume.image }}
        imagePullPolicy: {{ template "imagePullPolicy" dict "root" $ "context" $volume }}
        command:
          - "/bin/sh"
          - "-c"
          - >
            mount -o bind {{ $volume.dataPath }} /{{ $volume.name }} ;
            {{- if $volume.readOnly }}
            mount -o remount,ro /{{ $volume.name }} ;
            {{- end }}
            {{ if $volume.mountPermissions }}
            chmod {{ $volume.mountPermissions }} /{{ $volume.name }} ;
            {{- end }}
            {{- range $a_permission := $volume.permissions }}
            {{- if $a_permission.user }}
            chown -R {{ $a_permission.user }}{{- if $a_permission.group }}:{{ $a_permission.group }}{{- end }} {{ $volume.dataPath }}/{{ $a_permission.path }} ;
            {{- end }}
            {{- if $a_permission.mask }}
            chmod -R {{ $a_permission.mask }} {{ $volume.dataPath }}/{{ $a_permission.path }} ;
            {{- end }}
            {{- end }}
            while true ; do sleep 1 ; done ;
        lifecycle:
          preStop:
            exec:
              command:
                - "sh"
                - "-c"
                - >
                  {{- if $volume.readOnly }}
                  mount -o remount,rw /{{ $volume.name }} ;
                  {{- end }}
                  umount /{{ $volume.name }};
                  umount /{{ $volume.name }};
        volumeMounts:
          - mountPath: /{{ $volume.name }}
            mountPropagation: Bidirectional
            name: {{ $volume.name }}
        securityContext:
          privileged: true
          capabilities:
            add:
              - SYS_ADMIN
        {{- end }}
      {{- end }}
      {{- if and (index .Values "volume-data-sync" "enabled") }}
      volumes:
        {{- range $volume := (index .Values "volume-data-sync" "volumes") }}
      - name: {{ $volume.name }}
        emptyDir: {}
        {{- end }}
      {{- end }}

